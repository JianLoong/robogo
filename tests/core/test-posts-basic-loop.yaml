testcase: "TC-POSTS-BASIC-001"
description: "Test JSONPlaceholder posts endpoint with basic for loop demonstration"

variables:
  vars:
    base_url: "https://jsonplaceholder.typicode.com/posts"
    sample_count: 5

steps:
  - name: "Fetch all posts"
    action: http
    args: ["GET", "${base_url}"]
    result: "posts_response"

  - name: "Verify successful response"
    action: assert
    args: ["${posts_response.status_code}", "==", "200", "Should return 200 OK"]

  - name: "Log response info"
    action: log
    args: ["Response contains ${posts_response.body} characters of JSON data"]

  - name: "Log that we successfully got the posts array"
    action: log
    args: ["Successfully fetched posts array from JSONPlaceholder API"]

  - name: "Use for loop to process sample data"
    for:
      condition: "${sample_count}"
      steps:
        - name: "Log iteration info"
          action: log
          args: ["Processing iteration ${iteration} of ${sample_count}"]

        - name: "Calculate post ID for this iteration"
          action: variable
          args: ["set", "post_id", "${iteration}"]

        - name: "Log which post we're simulating"
          action: log
          args: ["This iteration would process post ID ${post_id}"]

  - name: "Test filtering posts by user"
    action: http
    args: ["GET", "${base_url}?userId=1"]
    result: "user1_posts"

  - name: "Count user 1 posts"
    action: length
    args: ["${user1_posts.body}"]
    result: "user1_count"

  - name: "Loop through user IDs to count posts per user"
    for:
      condition: "3"
      steps:
        - name: "Calculate current user ID"
          action: variable
          args: ["set", "current_user", "${iteration}"]

        - name: "Fetch posts for current user"
          action: http
          args: ["GET", "${base_url}?userId=${current_user}"]
          result: "current_user_posts"

        - name: "Count posts for current user"
          action: length
          args: ["${current_user_posts.body}"]
          result: "current_user_count"

        - name: "Log user posts count"
          action: log
          args: ["User ${current_user} has ${current_user_count} posts"]

  - name: "Test pagination with for loop"
    for:
      condition: "3"
      steps:
        - name: "Calculate limit for this iteration"
          action: variable
          args: ["set", "current_limit", "${iteration}"]

        - name: "Fetch limited posts"
          action: http
          args: ["GET", "${base_url}?_limit=${current_limit}"]
          result: "limited_posts"

        - name: "Count limited posts"
          action: length
          args: ["${limited_posts.body}"]
          result: "limited_count"

        - name: "Verify correct limit was applied"
          action: assert
          args: ["${limited_count}", "==", "${current_limit}", "Should return exactly ${current_limit} posts"]

        - name: "Log limit test result"
          action: log
          args: ["Limit test: requested ${current_limit}, got ${limited_count} posts"]

  - name: "Final summary"
    action: log
    args: ["Test completed successfully demonstrating for loops with the JSONPlaceholder posts API"]