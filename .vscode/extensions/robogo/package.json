{
  "name": "robogo",
  "displayName": "Robogo",
  "description": "Modern VS Code extension for Robogo test automation framework with intelligent features, real-time validation, and comprehensive documentation",
  "version": "2.0.0",
  "publisher": "robogo",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Programming Languages",
    "Testing",
    "Other"
  ],
  "keywords": [
    "robogo",
    "test",
    "automation",
    "yaml",
    "api",
    "testing",
    "tdm",
    "swift",
    "postgres",
    "parallel",
    "retry",
    "secrets",
    "variables",
    "control-flow",
    "http",
    "database",
    "kafka",
    "rabbitmq",
    "spanner"
  ],
  "activationEvents": [
    "onLanguage:robogo",
    "onLanguage:yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "robogo",
        "aliases": [
          "Robogo",
          "robogo"
        ],
        "extensions": [
          ".robogo"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "robogo",
        "scopeName": "source.robogo",
        "path": "./syntaxes/robogo.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "robogo.runTest",
        "title": "Run Robogo Test",
        "category": "Robogo"
      },
      {
        "command": "robogo.runTestParallel",
        "title": "Run Robogo Test (Parallel)",
        "category": "Robogo"
      },
      {
        "command": "robogo.runTestSuite",
        "title": "Run Robogo Test Suite",
        "category": "Robogo"
      },
      {
        "command": "robogo.listActions",
        "title": "List Robogo Actions",
        "category": "Robogo"
      },
      {
        "command": "robogo.validateTDM",
        "title": "Validate TDM Configuration",
        "category": "Robogo"
      },
      {
        "command": "robogo.generateTemplate",
        "title": "Generate Test Template",
        "category": "Robogo"
      },
      {
        "command": "robogo.generateTestCase",
        "title": "Generate Test Case",
        "category": "Robogo"
      },
      {
        "command": "robogo.generateTestSuite",
        "title": "Generate Test Suite",
        "category": "Robogo"
      },
      {
        "command": "robogo.debugTest",
        "title": "Debug Test with Variable Inspection",
        "category": "Robogo"
      },
      {
        "command": "robogo.showActionHelp",
        "title": "Show Action Help",
        "category": "Robogo"
      },
      {
        "command": "robogo.showExamples",
        "title": "Show Examples",
        "category": "Robogo"
      },
      {
        "command": "robogo.openSettings",
        "title": "Open Robogo Settings",
        "category": "Robogo"
      },
      {
        "command": "robogo.resetConfiguration",
        "title": "Reset Configuration",
        "category": "Robogo"
      },
      {
        "command": "robogo.showConfiguration",
        "title": "Show Current Configuration",
        "category": "Robogo"
      },
      {
        "command": "robogo.runWithOutput",
        "title": "Run Test with Output Format",
        "category": "Robogo"
      },
      {
        "command": "robogo.showDocumentation",
        "title": "Show Robogo Documentation",
        "category": "Robogo"
      },
      {
        "command": "robogo.validateSyntax",
        "title": "Validate Robogo Syntax",
        "category": "Robogo"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "robogo.runTest",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.runTestParallel",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.runTestSuite",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.listActions",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.validateTDM",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.generateTemplate",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.runWithOutput",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.showDocumentation",
          "when": "resourceExtname == .robogo"
        },
        {
          "command": "robogo.validateSyntax",
          "when": "resourceExtname == .robogo"
        }
      ],
      "editor/context": [
        {
          "command": "robogo.runTest",
          "when": "resourceExtname == .robogo",
          "group": "navigation"
        },
        {
          "command": "robogo.runTestParallel",
          "when": "resourceExtname == .robogo",
          "group": "navigation"
        },
        {
          "command": "robogo.runTestSuite",
          "when": "resourceExtname == .robogo",
          "group": "navigation"
        },
        {
          "command": "robogo.validateTDM",
          "when": "resourceExtname == .robogo",
          "group": "navigation"
        },
        {
          "command": "robogo.validateSyntax",
          "when": "resourceExtname == .robogo",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Robogo",
      "properties": {
        "robogo.executablePath": {
          "type": "string",
          "default": "robogo",
          "description": "Path to the Robogo executable"
        },
        "robogo.outputFormat": {
          "type": "string",
          "enum": [
            "console",
            "json",
            "markdown"
          ],
          "default": "console",
          "description": "Default output format for test execution"
        },
        "robogo.showDetailedDocumentation": {
          "type": "boolean",
          "default": true,
          "description": "Show detailed parameter documentation in hover tooltips"
        },
        "robogo.enableParallelExecution": {
          "type": "boolean",
          "default": true,
          "description": "Enable parallel execution by default"
        },
        "robogo.maxConcurrency": {
          "type": "number",
          "default": 4,
          "description": "Maximum concurrency for parallel execution"
        },
        "robogo.enableRealTimeValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time validation and error detection"
        },
        "robogo.showVerboseOutput": {
          "type": "boolean",
          "default": false,
          "description": "Show verbose output in test execution"
        },
        "robogo.enableAutoComplete": {
          "type": "boolean",
          "default": true,
          "description": "Enable intelligent autocomplete suggestions"
        },
        "robogo.enableHoverDocumentation": {
          "type": "boolean",
          "default": true,
          "description": "Enable hover documentation for actions and fields"
        },
        "robogo.enableSyntaxHighlighting": {
          "type": "boolean",
          "default": true,
          "description": "Enable enhanced syntax highlighting"
        },
        "robogo.enableCodeSnippets": {
          "type": "boolean",
          "default": true,
          "description": "Enable code snippets for quick template generation"
        }
      }
    },
    "snippets": [
      {
        "language": "robogo",
        "path": "./robogo.code-snippets"
      }
    ],
    "themes": [
      {
        "label": "Robogo Dark",
        "uiTheme": "vs-dark",
        "path": "./themes/robogo-dark-color-theme.json"
      },
      {
        "label": "Robogo Light",
        "uiTheme": "vs",
        "path": "./themes/robogo-light-color-theme.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "js-yaml": "^4.1.0",
    "yaml": "^2.4.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.90.0",
    "@types/node": "^20.0.0",
    "@types/js-yaml": "^4.0.5",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.57.0",
    "typescript": "^5.4.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/JianLoong/robogo.git"
  },
  "bugs": {
    "url": "https://github.com/JianLoong/robogo/issues"
  },
  "homepage": "https://github.com/JianLoong/robogo#readme",
  "license": "MIT"
}