{
    "name": "Robogo",
    "scopeName": "source.robogo",
    "fileTypes": [
        "robogo"
    ],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#actions"
        },
        {
            "include": "#control_flow"
        },
        {
            "include": "#tdm_elements"
        },
        {
            "include": "#var_keys"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#http_methods"
        },
        {
            "include": "#time_formats"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.robogo",
                    "match": "#.*$"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.robogo",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.robogo",
                            "match": "\\\\."
                        },
                        {
                            "name": "variable.other.robogo",
                            "match": "\\$\\{[^}]+\\}"
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.robogo",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.robogo",
                            "match": "\\\\."
                        },
                        {
                            "name": "variable.other.robogo",
                            "match": "\\$\\{[^}]+\\}"
                        }
                    ]
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.robogo",
                    "match": "\\b(testcase|description|steps|variables|verbose|name|action|args|result|retry|attempts|backoff|continue_on_failure|var|secrets|data_management|environments|data_sets|validation|setup|teardown|isolation|cleanup|environment|schema|required|unique|relations|version|overrides|mask_output|value|file|skip|condition|then|else|max_iterations|steps|parallel|options|max_concurrency|failfast|testsuite|testcases|regular)\\b"
                }
            ]
        },
        "actions": {
            "patterns": [
                {
                    "name": "support.function.action.robogo",
                    "match": "\\b(log|sleep|assert|get_time|get_random|concat|length|http|http_get|http_post|postgres|variable|control|tdm|kafka|rabbitmq|spanner|template|interface|builtin|registry|secrets|skip|string|time)\\b"
                }
            ]
        },
        "control_flow": {
            "patterns": [
                {
                    "name": "keyword.control.flow.robogo",
                    "match": "\\b(if|for|while|then|else|break|continue|return)\\b"
                }
            ]
        },
        "tdm_elements": {
            "patterns": [
                {
                    "name": "entity.name.tag.tdm.robogo",
                    "match": "\\b(data_management|environments|data_sets|validation|setup|teardown|isolation|cleanup|environment|schema|required|unique|relations|version|overrides|testcases)\\b"
                }
            ]
        },
        "var_keys": {
            "patterns": [
                {
                    "name": "variable.parameter.robogo",
                    "match": "^(\\s{2,}|\\t)([a-zA-Z_][a-zA-Z0-9_]*)(?=:)"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.robogo",
                    "match": "\\$\\{[^}]+\\}"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.robogo",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.comparison.robogo",
                    "match": "\\b(==|!=|>|<|>=|<=|contains|starts_with|ends_with|in|not_in)\\b"
                },
                {
                    "name": "keyword.operator.logical.robogo",
                    "match": "\\b(and|or|not|&&|\\|\\|)\\b"
                }
            ]
        },
        "http_methods": {
            "patterns": [
                {
                    "name": "constant.language.http.method.robogo",
                    "match": "\\b(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS)\\b"
                }
            ]
        },
        "time_formats": {
            "patterns": [
                {
                    "name": "constant.language.time.format.robogo",
                    "match": "\\b(iso|datetime|date|time|unix|unix_ms|RFC3339|RFC822|RFC850|RFC1123)\\b"
                }
            ]
        }
    }
}