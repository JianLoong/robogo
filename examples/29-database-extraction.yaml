testcase: Database Extraction Test
description: Test extract feature with database actions

variables:
  vars:
    db_url: "postgres://robogo_testuser:robogo_testpass@localhost:5432/robogo_testdb?sslmode=disable"

steps:
  - name: "Query database without extraction"
    action: postgres
    args: ["query", "${db_url}", "SELECT 1 as test_col, 'hello' as message"]
    result: raw_result

    
  - name: "Log raw database result"
    action: log
    args: ["Raw DB result: ${raw_result}"]
    
  - name: "Query database with JQ extraction"
    action: postgres
    args: ["query", "${db_url}", "SELECT 1 as test_col, 'hello' as message, 'world' as greeting"]
    extract:
      type: "jq"
      path: ".rows[0][1]"  # Extract second column (message) from first row
    result: extracted_message
    
  - name: "Log extracted message"
    action: log
    args: ["Extracted message: ${extracted_message}"]
    
  - name: "Query with regex extraction on full result"
    action: postgres
    args: ["query", "${db_url}", "SELECT 'Status: ACTIVE' as status_info"]
    extract:
      type: "regex"
      path: "Status: (\\w+)"
      group: 1
    result: status
    retry:
      attempts: 3
      delay: "6s"
      retry_if: "${status} != 'ACTIVE'"

  - name: "Log extracted status"
    action: log
    args: ["Extracted status: ${status}"]