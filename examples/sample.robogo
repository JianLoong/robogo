# Sample Robogo Test Case
# This file demonstrates the basic features of the Robogo framework

testcase: "Sample Test Case"
description: "A comprehensive sample test case demonstrating Robogo features"

steps:
  # Basic logging
  - name: "Start test case"
    action: log
    args: ["Starting sample test case"]
  
  # Get current timestamp and store in variable
  - name: "Get start time"
    action: get_time
    args: ["iso"]
    result: start_time
  
  # Log the timestamp using variable substitution
  - name: "Log start time"
    action: log
    args: ["Test started at: ${start_time}"]
  
  # Sleep for a short duration
  - name: "Wait 0.5 seconds"
    action: sleep
    args: [0.5]
  
  # Basic assertion
  - name: "Basic assertion"
    action: assert
    args: [true, true, "Basic assertion test"]
  
  # String operations with variables
  - name: "Create greeting"
    action: concat
    args: ["Hello", " ", "from", " ", "Robogo"]
    result: greeting
  
  - name: "Log greeting"
    action: log
    args: ["Greeting: ${greeting}"]
  
  # Get length of the greeting
  - name: "Get greeting length"
    action: length
    args: ["${greeting}"]
    result: greeting_length
  
  - name: "Log greeting length"
    action: log
    args: ["Greeting length: ${greeting_length}"]
  
  # Assert using variables
  - name: "Assert greeting length"
    action: assert
    args: ["${greeting_length}", "17", "Greeting should be 17 characters"]
  
  # Get a random number
  - name: "Get random number"
    action: get_random
    args: [100]
    result: random_value
  
  - name: "Log random number"
    action: log
    args: ["Random number: ${random_value}"]
  
  # Different time formats
  - name: "Get current date"
    action: get_time
    args: ["date"]
    result: current_date
  
  - name: "Get current time"
    action: get_time
    args: ["time"]
    result: current_time
  
  - name: "Log current date and time"
    action: log
    args: ["Current date: ${current_date}, time: ${current_time}"]
  
  # Final log with multiple variables
  - name: "Log completion"
    action: log
    args: ["Sample test completed successfully at ${current_time} on ${current_date}"]

# This file demonstrates:
# - Basic actions: log, sleep, assert
# - Variable assignment with 'result'
# - Variable substitution with ${variable}
# - String operations: concat, length
# - Time operations with different formats
# - Random number generation
# - Complex assertions using variables 