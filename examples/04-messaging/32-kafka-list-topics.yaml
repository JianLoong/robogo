testcase: "Kafka List Topics Test"
description: "Test Kafka list_topics operation to discover available topics"

# Prerequisites: 
# 1. Start Kafka: docker-compose up -d
# 2. Create some test topics:
#    docker exec kafka kafka-topics.sh --create --topic user-events --bootstrap-server localhost:9092 --partitions 2 --replication-factor 1
#    docker exec kafka kafka-topics.sh --create --topic order-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

variables:
  vars:
    kafka_broker: "localhost:9092"

steps:
  - name: "List all available topics"
    action: kafka
    args: ["list_topics", "${kafka_broker}"]
    options:
      timeout: 10s
    result: topics_result

  - name: "Display topics result"
    action: log
    args: ["Topics found:", "${topics_result}"]

  - name: "Extract topics array using jq"
    action: jq
    args: ["${topics_result}", ".topics"]
    result: topics_array

  - name: "Extract topic count using jq"
    action: jq
    args: ["${topics_result}", ".count"]
    result: topic_count

  - name: "Display topic count"
    action: log
    args: ["Total topics found: ${topic_count}"]

  - name: "Display individual topics"
    action: log
    args: ["Available topics: ${topics_array}"]

  - name: "Assert that we found at least one topic"
    action: assert
    args: ["${topic_count}", ">", "0"]

  - name: "Check if user-events topic exists using jq"
    action: jq
    args: ["${topics_result}", '.topics | map(select(. == "user-events")) | length > 0']
    result: user_events_exists
    continue: true

  - name: "Check if order-events topic exists using jq"
    action: jq
    args: ["${topics_result}", '.topics | map(select(. == "order-events")) | length > 0']
    result: order_events_exists
    continue: true

  - name: "Log topic existence check results"
    action: log
    args: [
      "Topic existence check",
      "user-events exists: ${user_events_exists}, order-events exists: ${order_events_exists}"
    ]

  - name: "Test topic discovery workflow completion"
    action: log
    args: ["âœ… Kafka topic discovery test completed successfully"]