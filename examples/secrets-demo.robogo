testcase: "Secret Management Demo"
description: |
  Demonstrates Robogo's comprehensive secret management features:
  - File-based vs inline secrets
  - Masked vs unmasked secrets
  - Secrets in HTTP headers and authentication
  - Debug output with proper secret masking

variables:
  vars:
    api_base_url: "https://jsonplaceholder.typicode.com"
    environment: "development"
    service_name: "robogo-demo"

  secrets:
    # File-based secrets (recommended for production)
    api_key:
      file: "examples/secrets/api-key.txt"
      mask_output: true  # Will show [MASKED] in debug output
    
    jwt_token:
      file: "examples/secrets/jwt-token.txt"  
      mask_output: true  # Authentication tokens should be masked
    
    # Inline secrets (convenient for development)
    client_secret:
      value: "client_secret_abc123xyz"
      mask_output: true  # OAuth secrets should be masked
    
    # Unmasked secrets (for debugging/non-sensitive data)
    api_version:
      value: "v1.2.3"
      mask_output: false  # Version numbers aren't sensitive
    
    endpoint_path:
      value: "/api/v1/posts"
      mask_output: false  # API paths aren't usually sensitive

steps:
  - name: "🚀 Welcome message with environment info"
    action: log
    args: ["Running ${testcase} in ${environment} using ${service_name}"]

  - name: "🔑 Test HTTP request with file-based API key (masked)"
    action: http
    args: 
      - "GET"
      - "${api_base_url}/posts/1"
    options:
      headers:
        Authorization: "Bearer ${api_key}"
        X-API-Version: "${api_version}"
        User-Agent: "${service_name}"
    result: api_response

  - name: "✅ Verify API response"
    action: assert
    args: ["${api_response.status_code}", "==", "200"]

  - name: "🔑 Test with JWT token (also masked)"
    action: http
    args:
      - "GET"
      - "${api_base_url}/users/1"
    options:
      headers:
        Authorization: "Bearer ${jwt_token}"
        X-Client-Secret: "${client_secret}"
        X-API-Version: "${api_version}"
    result: user_response

  - name: "✅ Verify user response"
    action: assert
    args: ["${user_response.status_code}", "==", "200"]

  - name: "📝 Set dynamic URL with secrets"
    action: variable
    args:
      - "set"
      - "secure_url"
      - "${api_base_url}${endpoint_path}?token=${jwt_token}&key=${api_key}"

  - name: "🌐 Make request using constructed URL (secrets masked in logs)"
    action: http
    args:
      - "GET"
      - "${api_base_url}/posts/2"
    options:
      headers:
        Authorization: "Bearer ${jwt_token}"
        X-Constructed-URL: "${secure_url}"
    result: constructed_response

  - name: "✅ Verify constructed request"
    action: assert
    args: ["${constructed_response.status_code}", "==", "200"]

  - name: "🔍 Demonstrate secret handling in templates"
    action: template
    args: ["examples/test-template.txt"]
    options:
      data:
        sender_bic: "DEMOBANK123"
        receiver_bic: "TESTBANK456"
        amount: "500.00"
        currency: "USD"
        reference: "DEMO-TXN-001"
        api_key: "${api_key}"
        auth_token: "${jwt_token}"
        timestamp: "2025-01-01T12:00:00Z"
    result: template_output

  - name: "📊 Log template size (secrets masked)"
    action: log
    args: ["Generated template size: ${length(template_output)} characters"]

  - name: "🔄 Test secrets in conditional logic"
    action: if
    args: ["${api_version}", "==", "v1.2.3"]
    steps:
      - name: "✅ API version check passed"
        action: log
        args: ["Using API version ${api_version} with secure endpoints"]

  - name: "🔄 Test secrets in loop"
    action: for
    args: ["post_id", [1, 2, 3]]
    steps:
      - name: "🌐 Authenticated request in loop"
        action: http
        args:
          - "GET"
          - "${api_base_url}/posts/${post_id}"
        options:
          headers:
            Authorization: "Bearer ${jwt_token}"
            X-Loop-Iteration: "${post_id}"
        result: "loop_response_${post_id}"

      - name: "✅ Verify loop response"
        action: assert
        args: ["${loop_response_${post_id}.status_code}", "==", "200"]

  - name: "🎯 Final demonstration: All secret types in one log"
    action: log
    args: ["Demo complete! Used: API=${api_key}, JWT=${jwt_token}, Client=${client_secret}, Version=${api_version}"]

  - name: "📋 Summary with secret statistics"
    action: log
    args: ["✅ Successfully demonstrated secret masking in ${environment} environment"]