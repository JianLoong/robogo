testcase: "Clean SECRETS Namespace Example"
description: |
  Demonstrates the clean SECRETS.var namespace syntax that separates 
  secrets from regular variables for better security and clarity.

variables:
  # Regular variables use normal syntax
  vars:
    api_url: "https://jsonplaceholder.typicode.com"
    environment: "production"
    retry_count: 3
    timeout_seconds: 30

  # Secrets use SECRETS.var syntax for access  
  secrets:
    # Production API credentials
    api_key:
      file: "examples/secrets/api-key.txt"
      mask_output: true
    
    # Authentication token
    auth_token:
      file: "examples/secrets/jwt-token.txt"
      mask_output: true
    
    # Service version (not sensitive)
    service_version:
      value: "2.1.0"
      mask_output: false

steps:
  - name: "üöÄ Environment setup"
    action: log
    args: ["Deploying to ${environment} with ${retry_count} retry attempts"]

  - name: "üîë Secure API call with clean namespace"
    action: http
    args: ["GET", "${api_url}/posts/1"]
    options:
      headers:
        # Clean separation: regular vars vs secrets
        Authorization: "Bearer ${SECRETS.api_key}"           # Secret namespace
        X-Auth-Token: "${SECRETS.auth_token}"               # Secret namespace  
        X-Environment: "${environment}"                     # Regular variable
        X-Service-Version: "${SECRETS.service_version}"     # Secret namespace (unmasked)
        X-Timeout: "${timeout_seconds}"                     # Regular variable
    result: response

  - name: "‚úÖ Verify secure request"
    action: assert
    args: ["${response.status_code}", "==", "200"]

  - name: "üìä Build connection string with mixed variables"
    action: variable
    args:
      - "set"
      - "connection_info"
      - "Environment: ${environment}, Version: ${SECRETS.service_version}, Timeout: ${timeout_seconds}s"

  - name: "üîç Log connection info (secrets auto-masked)"
    action: log
    args: ["Connection: ${connection_info}"]

  - name: "üéØ Final summary"
    action: log
    args: ["‚úÖ ${environment} deployment complete using service version ${SECRETS.service_version}"]